import streamlit as st
import pandas as pd
import joblib

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="ML Model Deployment", page_icon="üîÆ", layout="centered")

# 1. –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
def load_model():
    # –ó–∞–≥—Ä—É–∂–∞–µ—Ç –º–æ–¥–µ–ª—å –∏–∑ —Ñ–∞–π–ª–∞ model.pkl
    model = joblib.load("model.pkl")
    return model

model = load_model()

# 2. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞—Ç–∞—Å–µ—Ç–∞
columns = [
    'WSR0', 'WSR1', 'WSR2', 'WSR3', 'WSR4', 'WSR5', 'WSR6', 'WSR7', 'WSR8', 'WSR9', 'WSR10',
    'WSR11', 'WSR12', 'WSR13', 'WSR14', 'WSR15', 'WSR16', 'WSR17', 'WSR18', 'WSR19', 'WSR20', 'WSR21', 'WSR22', 'WSR23',
    'WSR_PK', 'WSR_AV',
    'T0', 'T1', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'T8', 'T9', 'T10', 'T11', 'T12', 'T13', 'T14', 'T15', 'T16', 'T17',
    'T18', 'T19', 'T20', 'T21', 'T22', 'T23',
    'T_PK', 'T_AV', 'T85', 'RH85', 'U85', 'V85', 'HT85',
    'T70', 'RH70', 'U70', 'V70', 'HT70',
    'T50', 'RH50', 'U50', 'V50', 'HT50',
    'KI', 'TT', 'SLP', 'SLP_', 'Precp',
]

df = pd.read_excel("output.xlsx", names=columns)
st.write("‚úÖ –î–∞—Ç–∞—Å–µ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")

# 3. –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title('üîÆ –î–µ–ø–ª–æ–π ML-–º–æ–¥–µ–ª–∏')
st.write("–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –ø–æ–ª–∑—É–Ω–∫–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ.")

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤
st.sidebar.header("–í–≤–æ–¥ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤")

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω—ã –¥–ª—è –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ T14 –∏ T13 –∏–∑ –¥–∞—Ç–∞—Å–µ—Ç–∞
t14_min = float(df['T14'].min())
t14_max = float(df['T14'].max())
t14_mean = float(df['T14'].mean())

t13_min = float(df['T13'].min())
t13_max = float(df['T13'].max())
t13_mean = float(df['T13'].mean())

# –°–ª–∞–π–¥–µ—Ä—ã –¥–ª—è –≤–≤–æ–¥–∞ –∑–Ω–∞—á–µ–Ω–∏–π
feat_t14 = st.sidebar.slider("–í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è T14", t14_min, t14_max, t14_mean)
feat_t13 = st.sidebar.slider("–í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è T13", t13_min, t13_max, t13_mean)

# –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ DataFrame —Å –≤–≤–µ–¥—ë–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
input_data = pd.DataFrame({
    'T14': [feat_t14],
    'T13': [feat_t13]
})

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
def show_graphs():
    st.subheader("–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ T14")
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—É –¥–ª—è T14
    st.bar_chart(df['T14'].value_counts().sort_index())

    st.subheader("–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ T13")
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—É –¥–ª—è T13
    st.bar_chart(df['T13'].value_counts().sort_index())

    st.subheader("Scatter plot: T14 vs T13")
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º scatter plot –¥–ª—è T14 –∏ T13
    st.scatter_chart(df[['T14', 'T13']])

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –ø—Ä–∏–∑–Ω–∞–∫–∞–º
def display_statistics():
    st.subheader("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø—Ä–∏–∑–Ω–∞–∫–∞–º")
    st.write("#### T14")
    st.write(df['T14'].describe())
    st.write("#### T13")
    st.write(df['T13'].describe())

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
if st.button("üîç –ü—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å"):
    prediction = model.predict(input_data)
    st.success(f"üì¢ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è: {prediction[0]}")

# –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–∫–∞–∑–∞—Ç—å –¥–∞—Ç–∞—Å–µ—Ç
if st.checkbox("–ü–æ–∫–∞–∑–∞—Ç—å –¥–∞—Ç–∞—Å–µ—Ç"):
    st.dataframe(df)

# –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –±–ª–æ–∫ —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏
with st.expander("–ü–æ–∫–∞–∑–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏"):
    show_graphs()

# –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –±–ª–æ–∫ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
with st.expander("–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"):
    display_statistics()
